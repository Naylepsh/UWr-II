Prostą metodą znajdowania przybliżenia miejsca zerowego funkcji ciągłej jest bisekcja. Jeśli dla danej funkcji f znamy dwa punkty x, y w których wartości f są różnych znaków (tj. sgn(f(x)) ≠ sgn(f(y))), to wiemy że ma ona (co najmniej jedno) miejsce zerowe na odcinku [x, y]. W takim wypadku obliczając sgn(f((x+y)/2)) możemy sprawdzić w której połowie tego przedziału znajduje się miejsce zerowe f — a zatem ograniczyć obszar przeszukiwania o połowę. Iterując taki proces możemy znaleźć miejsce zerowe z żądaną dokładnością.

Zaimplementuj funkcję bisect(f, x, y), która dla danej funkcji f i punktów x i y, znajdzie miejsce zerowe f na odcinku [x, y]. Przyjmij że wartości liczbowe odległe o mniej niż ε = 2**-32 są nieodróżnialne, czyli w szczególności że jeśli |f(x)| < ε, to x jest miejscem zerowym f, a jeśli |x-y| < ε, to należy przerwać iterację. Funkcja powinna sprawdzać czy wartości funkcji w punktach początkowych mają przeciwne znaki, i zgłaszać błędy przy pomocy konstrukcji assert.

Następnie użyj funkcji bisect aby znaleźć miejsce zerowe pewnego wielomianu (na przykład x^4 - 4x - 8) reprezentowanego tak jak w pierwszych dwóch wprawkach (czyli jako lista współczynników od najwyższej potęgi). W tym celu użyj funkcji obliczającej wartość wielomianu z pierwszej wprawki aby stworzyć funkcję którą możesz przekazać jako argument do funkcji bisect.